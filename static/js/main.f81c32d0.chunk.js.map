{"version":3,"sources":["contexts/ContextProvider.js","hooks/useFetchData.js","components/organisms/ListaLibros/ListaLibros.jsx","components/molecules/Formulario/Formulario.jsx","components/pages/Libros/Libros.jsx","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","rest","Provider","useFetchData","useState","posts","setPosts","useEffect","fetchPosts","then","lists","newPostsArray","map","item","leido","createNewData","catch","err","console","error","log","fetch","response","json","ListaLibros","title","readCondition","useContext","handleChange","event","persist","target","id","checked","modifiedLibros","libro","Number","className","filter","onChange","type","Formulario","libros","setLibros","nombre","setNombre","onSubmit","preventDefault","newBook","parseInt","length","toString","name","placeholder","autoComplete","value","e","Libros","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f81c32d0.chunk.js","sourcesContent":["import React from \"react\";\n// import { listaLibros } from \"../assets/data/libros\";\n\nexport const AppContext = React.createContext();\n\nexport default function AppProvider({ children, ...rest }) {\n  return <AppContext.Provider {...rest}>{children}</AppContext.Provider>;\n}\n","import { useState, useEffect } from \"react\";\n\nfunction useFetchData() {\n  const [posts, setPosts] = useState();\n\n  // Add 'leido' prop to each object\n  const createNewData = (lists) => {\n    const newPostsArray = lists.map((item) => ({ ...item, leido: false }));\n\n    setPosts(newPostsArray);\n  };\n\n  useEffect(() => {\n    fetchPosts()\n      .then((posts) => {\n        // Set fetch response data\n        createNewData(posts);\n      })\n      .catch((err) => console.error(err));\n\n    console.log(\"solo una vez\");\n  }, []);\n\n  // Promise to fetch posts\n  const fetchPosts = () => {\n    return fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((response) => response.json())\n      .then((posts) => posts)\n      .catch((err) => console.error(err));\n  };\n\n  return {\n    posts,\n    setPosts,\n  };\n}\n\nexport default useFetchData;\n","import React, {useContext} from 'react';\n\n// Contexto\nimport {AppContext} from '../../../contexts/ContextProvider'\n\nfunction ListaLibros({ title, readCondition }) {\n  // Consume context\n  const { posts, setPosts } = useContext(AppContext);\n\n  const handleChange = (event) => {\n    event.persist();\n    const { id, checked } = event.target;\n    \n    // Update 'leido' prop to checked posts\n    const modifiedLibros = posts.map((libro) => {\n      if (libro.id === Number(id)) {\n        return {\n          ...libro,\n          leido: checked,\n        };\n      }\n      return libro;\n    });\n\n    // update contenxt data\n    setPosts(modifiedLibros);\n  };\n\n\n  return (\n    <div className={`parent ${readCondition ? \"no-leidos\" : \"leidos\"}`}>\n      <div className=\"context-title\">{title}</div>\n      <div className=\"flex column libros\">\n        {posts && posts\n          .filter((libro) => libro.leido === readCondition)\n          .map((libro) => {\n            return (\n              <div key={libro.id} className=\"libro\">\n                <span>{libro.title}</span>\n                <input\n                  id={libro.id}\n                  onChange={handleChange}\n                  checked={libro.leido}\n                  className=\"check\"\n                  type=\"checkbox\"\n                />\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default ListaLibros;\n","import React, { useContext, useState } from \"react\";\nimport { AppContext } from \"../../../contexts/ContextProvider\";\n\nimport \"../../../styles.css\";\n\nfunction Formulario() {\n  // Context\n  const {libros, setLibros} = useContext(AppContext);\n\n  // estado del formulario\n  const [nombre, setNombre] = useState('');\n  \n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // creo el nuevo libro para agregar al contexto\n    const newBook = {\n      id: (parseInt(libros[libros.length - 1].id) + 1).toString(), \n      nombre: nombre, \n      leido: false \n    }\n    \n    // actualizo el contexto, libros existentes, mas el nuevo\n    setLibros([\n      ...libros,\n      newBook\n    ]);\n\n    // reset input\n    setNombre('');\n  };\n\n  return (\n    <div className=\"flex column\">\n      <div className=\"parents-title\">Agregar Libros</div>\n      <div className=\"flex flex-center\">\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"libro\"\n            placeholder=\"Nombre del libro\"\n            autoComplete=\"off\"\n            value={nombre}\n            onChange={(e) => setNombre(e.target.value)}\n          />\n          <button> Agregar </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Formulario;\n","import React from 'react';\n\n// Components\nimport ListaLibros from '../../organisms/ListaLibros/ListaLibros'\nimport Formulario from '../../molecules/Formulario/Formulario';\n\nfunction Libros() {\n  return (\n    <div className=\"parents\">\n      <div className=\"flex column\">\n        <div className=\"parents-title\">MARCAP√ÅGINAS</div>\n        <div className=\"flex flex-center\">\n          <ListaLibros title=\"Libros por leer\" readCondition={false} />\n          <ListaLibros title=\"Libros leidos\" readCondition={true} />\n        </div>\n        <Formulario />\n      </div>\n    </div>\n  );\n}\n\nexport default Libros","import React from \"react\";\nimport \"./styles.css\";\nimport AppProvider from \"./contexts/ContextProvider\";\n\n// Hooks\nimport useFetchData from \"./hooks/useFetchData\";\n\n// Components\nimport Libros from \"./components/pages/Libros/Libros\";\n\nexport default function App() {\n  const { posts, setPosts } = useFetchData();\n\n  return (\n    // Envolvemos componentes con acceso al context\n    <AppProvider value={{ posts, setPosts }}>\n      <div className=\"App\">\n        <Libros />\n      </div>\n    </AppProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}